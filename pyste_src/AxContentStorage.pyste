
#obj = Class("AxContentStorage", "AxContentStorage.h")

#exclude(obj.dump)
#exclude(obj.operator['<<'])


Include("AxIterator.h")
Include("AxContentStorage.h")

declaration_code("""

AxMobIter PyGetAllMobs(AxContentStorage* storage)
    {
        
        aafSearchCrit_t criteria;
        criteria.searchTag = kAAFByMobKind;
        criteria.tags.mobKind = kAAFAllMob;
        AxMobIter axMobIter( storage->GetMobs( &criteria ) );
        return axMobIter;
    }
    
AxMobIter PyGetMasterMobs(AxContentStorage* storage)
    {
        
        aafSearchCrit_t criteria;
        criteria.searchTag = kAAFByMobKind;
        criteria.tags.mobKind = kAAFMasterMob;
        AxMobIter axMobIter( storage->GetMobs( &criteria ) );
        return axMobIter;
    }
    
AxMobIter PyGetCompositionMobs(AxContentStorage* storage)
    {
        
        aafSearchCrit_t criteria;
        criteria.searchTag = kAAFByMobKind;
        criteria.tags.mobKind = kAAFCompMob;
        AxMobIter axMobIter( storage->GetMobs( &criteria ) );
        return axMobIter;
    }

"""
)

module_code("""

    class_< AxContentStorage, boost::noncopyable >("AxContentStorage", init< IAAFContentStorageSP >())
        .def("LookupMob", &AxContentStorage::LookupMob)
        .def("LookupEssenceData", &AxContentStorage::LookupEssenceData)
        .def("CountEssenceData", &AxContentStorage::CountEssenceData)
        .def("IsEssenceDataPresent", &AxContentStorage::IsEssenceDataPresent)
        .def("GetMobs",PyGetAllMobs)
        .def("EnumEssenceData", &AxContentStorage::EnumEssenceData)
        .def("GetClassName", &AxObject::GetClassName)
        .def("GetDictionary", &AxObject::GetDictionary)
        .def("GetProperties", &AxObject::GetProperties)
        .def("GetDefinition", &AxObject::GetDefinition)
        .def("GetMasterMobs",PyGetMasterMobs)
        .def("GetCompositionMobs",PyGetCompositionMobs)
    ;


"""
)